% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dt_id.R
\name{uk_patient_id_dt}
\alias{uk_patient_id_dt}
\title{Patient ID record grouping

Groups patient records from multiple isolates with a single patientID
GROUPED by nhs_number, hospital_number, date_of_birth, assigns a unique IDno to each patient.
sort by specimen date
generates a unique sequential number from 1-X for each record
then based on grouping, reassigns records to same number
group by different combos of patient identifiers, also dont include invalid nhs_numbers

Grouping is based on five stages:
\enumerate{
\item matching nhs number and date of birth
\item Hospital number &  Date of Birth
\item NHS number & Hospital Number
\item Sex & Date of Birth & Surname IF nhs unknown
\item Sex & Date of Birth & Fuzzy Name
}}
\usage{
uk_patient_id_dt(
  x,
  nhs_number,
  hospital_number,
  date_of_birth,
  sex,
  forename = "NONAME",
  surname = "NONAME"
)
}
\arguments{
\item{x}{a data.frame or tibble containing the cleaned line list}

\item{nhs_number}{a column as a character containing the patient NHS numbers}

\item{hospital_number}{a column as a character containing the patient Hospital numbers}

\item{date_of_birth}{a column as a date variable containing the patient date of birth in date format}

\item{sex}{a column as a character containing the patient sex}

\item{forename}{a column as a character containing the patient forename; leave as NONAME if unavailable}

\item{surname}{a column as a character containing the patient surname; leave as NONAME if unavailable}

\item{sort_by}{a column to give a priority sort order if required}
}
\value{
patientID grouping variable

A dataframe with two new variables: id a unique patient id, and n_in_id an integer variable with the number of rows in the id
}
\description{
Patient ID record grouping

Groups patient records from multiple isolates with a single patientID
GROUPED by nhs_number, hospital_number, date_of_birth, assigns a unique IDno to each patient.
sort by specimen date
generates a unique sequential number from 1-X for each record
then based on grouping, reassigns records to same number
group by different combos of patient identifiers, also dont include invalid nhs_numbers

Grouping is based on five stages:
\enumerate{
\item matching nhs number and date of birth
\item Hospital number &  Date of Birth
\item NHS number & Hospital Number
\item Sex & Date of Birth & Surname IF nhs unknown
\item Sex & Date of Birth & Fuzzy Name
}
}
\examples{
dat <- dplyr::tribble(
  ~nhs_n, ~hosp_n, ~sex, ~dateofbirth, ~firstname, ~lastname,
  9434765919, 13L, "M", "1988-10-06", "Danger", "Mouse",
  9434765919, 13L, "M", "1988-06-10", "Danger", "MÃ”use",
  9434765919, 13L, "M", "1900-01-01", "Denger", "Mouse",
  NA,         NA,  "M", "1988-10-06", "Danger", "Moose",
  NA,         13L, "M", "1988-10-06", "Danger", "Moose",
  3367170666, 13L, "M", "1988-10-06", "DANGER", "Mouse",
  5185293519, 13L, "M", "1988-10-06", "Danger", "MOUSe",
  5185293519, 31L, "M", "1988-10-06", "Danger", "Mouse",
  5185293519, 31L, "M", "1988-10-06", "Danger", "Mouse",
  8082318562, 96L, "F", "2020-01-28", "Crazy",  "Frog",
  NA,         96L, "U", "2020-01-28", "Crazy",  "FROG",
  NA,         96L, "U", "2020-01-28", "Krazy",  "Frug",
  NA,         96L, "F", "2020-01-28", "C",      "Frog"
) \%>\% dplyr::mutate(dateofbirth=as.Date(dateofbirth))


}
