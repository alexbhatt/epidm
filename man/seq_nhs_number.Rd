% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valid_nhs.R
\name{seq_nhs_number}
\alias{seq_nhs_number}
\title{Find sequences in NHS number using regex}
\usage{
seq_nhs_number(value)
}
\arguments{
\item{value}{NHS number find sequences such as 9999999999 in NHS numbers using regex in strings}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Check if NHS numbers are valid based on the checksum algorithm\cr

This uses the first 9 digits, multiplied by 10 down to 2 eg digit 1x10, d2x9\cr

The sum of the products of the first 9 digits are divided by 11\cr

The remainder is checked against the 10th digit\cr

Where the remainder is 11, it is replaced with NA_character\cr

Examples are not real NHS numbers please do not use real\cr
NHS numbers, in tests, code or documentation.\cr
Function using regex to remove consecutive 10 digit strings from NHS numbers,\cr
i.e strings contains 10 1's or 0's\cr
variable or string containing numeric NHS numbers as class character\cr
Can be re-purposed to clean other numeric id variables by altering regex \code{n}\cr
Use: to be used inside dplyr::mutate()\cr
e.g. df \%>\% mutate(nhsnumber = seq_nhs_number(nhsnumber)) # use inside mutate
}
\examples{
nhs_no <- stringr::str_flatten(replicate(10, 9))
seq_nhs_number(nhs_no)
}
\seealso{
\code{\link[=valid_nhs]{valid_nhs()}} \code{\link[=checksum_nhs_number]{checksum_nhs_number()}} \code{\link[=range_nhs_number]{range_nhs_number()}} \code{\link[=remove_non_numeric_char]{remove_non_numeric_char()}}
}
\author{
Owen Pullen
}
