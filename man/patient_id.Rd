% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patient_id.R
\name{patient_id}
\alias{patient_id}
\title{Patient ID record grouping

Groups patient records from multiple isolates with a single patientID
GROUPED by nhs_number, hospital_number, date_of_birth, assigns a unique IDno to each patient.
sort by specimen date
generates a unique sequential number from 1-X for each record
then based on grouping, reassigns records to same number
group by different combos of patient identifiers, also dont include invalid nhs_numbers

Grouping is based on four stages: 
\enumerate{
\item matching nhs number and date of birth
\item Hospital number &  Date of Birth &  Surname
\item NHS number & Hospital Number
\item Sex & Date of Birth & Surname IF nhs unknown
\item Sex & Date of Birth & Fuzzy Name
}}
\usage{
patient_id(
  data,
  nhs_number,
  hospital_number,
  forename = "NONAME",
  surname = "NONAME",
  sex,
  date_of_birth,
  sort_date,
  flags = FALSE
)
}
\arguments{
\item{data}{a data.frame or tibble containing the cleaned line list}

\item{nhs_number}{a column as a character containing the patient NHS numbers}

\item{hospital_number}{a column as a character containing the patient Hospital numbers}

\item{forename}{a column as a character containing the patient forename}

\item{surname}{a column as a character containing the patient surname}

\item{sex}{a column as a character containing the patient sex}

\item{date_of_birth}{a column as a date variable containing the patient date of birth in date format}

\item{sort_date}{a column as a date variable containing a date by which patients should be sorted, often the specimen date}

\item{flags}{logical if you want to keep the calculation data}
}
\value{
patientID grouping variable

A dataframe with two new variables: id a unique patient id, and n_in_id an integer variable with the number of rows in the id.
}
\description{
Patient ID record grouping

Groups patient records from multiple isolates with a single patientID
GROUPED by nhs_number, hospital_number, date_of_birth, assigns a unique IDno to each patient.
sort by specimen date
generates a unique sequential number from 1-X for each record
then based on grouping, reassigns records to same number
group by different combos of patient identifiers, also dont include invalid nhs_numbers

Grouping is based on four stages: 
\enumerate{
\item matching nhs number and date of birth
\item Hospital number &  Date of Birth &  Surname
\item NHS number & Hospital Number
\item Sex & Date of Birth & Surname IF nhs unknown
\item Sex & Date of Birth & Fuzzy Name
}
}
\examples{
dat <- structure(list(nhs_n = c(9434765919, 5185293519, 3367170666), 
hosp_n = c(1L, 1L, 2L), forenm = c("Danger", "Danger", "Danger"), 
surnm = c("Mouse", "Mouse", "Mouse"), s = c("M", "M", "M"), 
dob = structure(c(-25567, -25567, -25567), class = "Date"), 
spec_date = structure(c(18262, 18294, 18324), class = "Date")), 
class = "data.frame", row.names = c(NA, -3L))

patient_id(data = dat, nhs_number = "nhs_n", hospital_number = "hosp_n", 
  forename = "forenm", surname = "surnm", sex = "s", 
  date_of_birth = "dob", sort_date = "spec_date", flags = TRUE)

}
