% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callback.R
\name{callback}
\alias{callback}
\title{callback function for readr read_delim_chunked in sql_upload_txt_chunked()}
\usage{
callback(chunk, pos)
}
\arguments{
\item{chunk}{chunk of txt file loaded by readr::read_delim_chunked}

\item{pos}{position of chunk loaded by readr::read_delim_chunked}
}
\value{
TRUE invisibly also writes a table in a SQL database and saves out a copy of chunk in parquet
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\itemize {\item Not usually called do not run unless re-developing
\item A function to be run inside of \code{\link[=sql_upload_txt_chunked]{sql_upload_txt_chunked()}} or
\code{\link[=sql_upload_txt_chunked]{sql_upload_txt_chunked()}}
\item This function writes the chunk of the file
read by readr to a SQL table specified in \code{\link[=sql_upload_txt_chunked]{sql_upload_txt_chunked()}}
and produces a parquet file backup of each chunk read
\item Called in \code{\link[=sql_upload_txt_chunked]{sql_upload_txt_chunked()}} and \code{\link[=sql_upload_csv_chunked]{sql_upload_csv_chunked()}}
\item Parquet writing can disabled by specifying write_parquet = FALSE
in above functions
\item Upload txt/ csv file chunk file to staging table and create parquet file of the chunk
}
}
\note{
getOption() provides additional params set by sql_upload_txt_chunked/csv
}
\examples{
f <- function(x,pos) print(pos)
readr::read_csv_chunked(readr::readr_example("mtcars.csv"),
callback = readr::SideEffectChunkCallback$new(f),
chunk_size = 10
)
}
\author{
Owen Pullen
}
